import { cn } from "@/lib/utils";import * as SelectPrimitive from "@radix-ui/react-select";import { Check, ChevronDown, ChevronUp } from "lucide-react";import * as React from "react";const Select = SelectPrimitive.Root;const SelectGroup = SelectPrimitive.Group;const SelectValue = SelectPrimitive.Value;const SelectTrigger = React.forwardRef(  ({ className, children, ...props }, ref) => (    <SelectPrimitive.Trigger      ref={ref}      className={cn(        "flex h-10 w-full items-center justify-between rounded-lg border border-border bg-surface px-3 text-sm text-text outline-none transition-shadow",        "data-[placeholder]:text-text-dim",        "focus-visible:ring-2 focus-visible:ring-primary/40",        "disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",        className      )}      {...props}    >      {children}      <SelectPrimitive.Icon asChild>        <ChevronDown className="h-4 w-4 text-text-dim" />      </SelectPrimitive.Icon>    </SelectPrimitive.Trigger>  ));SelectTrigger.displayName = SelectPrimitive.Trigger.displayName;const SelectScrollUpButton = React.forwardRef(  ({ className, ...props }, ref) => (    <SelectPrimitive.ScrollUpButton      ref={ref}      className={cn("flex items-center justify-center py-1", className)}      {...props}    >      <ChevronUp className="h-4 w-4" />    </SelectPrimitive.ScrollUpButton>  ));SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;const SelectScrollDownButton = React.forwardRef(  ({ className, ...props }, ref) => (    <SelectPrimitive.ScrollDownButton      ref={ref}      className={cn("flex items-center justify-center py-1", className)}      {...props}    >      <ChevronDown className="h-4 w-4" />    </SelectPrimitive.ScrollDownButton>  ));SelectScrollDownButton.displayName =  SelectPrimitive.ScrollDownButton.displayName;const SelectContent = React.forwardRef(  ({ className, children, position = "popper", ...props }, ref) => (    <SelectPrimitive.Portal>      <SelectPrimitive.Content        ref={ref}        className={cn(          "z-50 min-w-[10rem] overflow-hidden rounded-lg border border-border bg-surface text-text shadow-[0_20px_60px_-30px_rgba(0,0,0,.65)]",          "data-[state=open]:animate-in data-[state=closed]:animate-out",          "data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95",          "data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95",          position === "popper" &&            "data-[side=bottom]:translate-y-1 data-[side=top]:-translate-y-1",          className        )}        position={position}        {...props}      >        <SelectScrollUpButton />        <SelectPrimitive.Viewport          className={cn(            "p-1",            position === "popper" &&              "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"          )}        >          {children}        </SelectPrimitive.Viewport>        <SelectScrollDownButton />      </SelectPrimitive.Content>    </SelectPrimitive.Portal>  ));SelectContent.displayName = SelectPrimitive.Content.displayName;const SelectLabel = React.forwardRef(({ className, ...props }, ref) => (  <SelectPrimitive.Label    ref={ref}    className={cn(      "py-1.5 pl-8 pr-2 text-xs font-semibold text-text-dim",      className    )}    {...props}  />));SelectLabel.displayName = SelectPrimitive.Label.displayName;const SelectItem = React.forwardRef(  ({ className, children, ...props }, ref) => (    <SelectPrimitive.Item      ref={ref}      className={cn(        "relative flex w-full select-none items-center rounded-md py-1.5 pl-8 pr-2 text-sm outline-none",        "data-[disabled]:pointer-events-none data-[disabled]:opacity-50",        "focus:bg-primary/12 focus:text-text",        "hover:bg-muted/50",        className      )}      {...props}    >      <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">        <SelectPrimitive.ItemIndicator>          <Check className="h-4 w-4 text-primary" />        </SelectPrimitive.ItemIndicator>      </span>      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>    </SelectPrimitive.Item>  ));SelectItem.displayName = SelectPrimitive.Item.displayName;const SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (  <SelectPrimitive.Separator    ref={ref}    className={cn("-mx-1 my-1 h-px bg-border", className)}    {...props}  />));SelectSeparator.displayName = SelectPrimitive.Separator.displayName;export {  Select,  SelectContent,  SelectGroup,  SelectItem,  SelectLabel,  SelectScrollDownButton,  SelectScrollUpButton,  SelectSeparator,  SelectTrigger,  SelectValue,};